--- a/src/zopflipng/zopflipng_lib.cc
+++ b/src/zopflipng/zopflipng_lib.cc
@@ -277,7 +277,7 @@

   return 0;
 }
- #include <dispatch/dispatch.h>
+
 // Use fast compression to check which PNG filter strategy gives the smallest
 // output. This allows to then do the slow and good compression only on that
 // filter type.
@@ -304,7 +304,7 @@
   size_t sizes_data[numstrategies];
   size_t *sizes = sizes_data;

-  dispatch_apply(numstrategies, dispatch_get_global_queue(0, 0), ^(size_t i){
+  for (int i = 0; i < numstrategies; i++) {
     std::vector<unsigned char> out;
     out.clear();
     const lodepng::State statecopy(inputstate);
@@ -312,7 +312,7 @@
     unsigned error = TryOptimize(image, w, h, statecopy, bit16, origfile,
                                  strategies[i], false, windowsize, 0, &out);
     sizes[i] = error ? 0 : out.size();
-  });
+  }

   for (int i = 1; i < numstrategies; i++) {
     if (sizes[i]==0) continue;
